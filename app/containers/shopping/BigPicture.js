/** * ShoppingState.js */import React, {Component} from "react";import {Image, StatusBar, StyleSheet, Text, View,ScrollView} from "react-native";import {connect} from "react-redux";import {TopToolBar,ACTION_HELP} from '../../components/TopToolBar';import {BottomToolBar, ACTION_BACK, ACTION_DISCOUNT,ACTION_LOGOUT} from '../../components/BottomToolBar';import * as authActions from "../../actions/auth-actions";import strings from "../../resources/strings"import constants from '../../resources/constants';import Button from "../../components/Button";import {getTabBarHeight, SCREEN_HEIGHT, SCREEN_WIDTH} from "../../utils/tools";import Modal from "react-native-modalbox";import ImageViewer from 'react-native-image-zoom-viewer';export class BigPicture extends Component {    constructor(props) {        super(props);        this.state={            bigPictureUrl:this.props.navigation.state.params.bigPictureUrl,        };    }    // componentWillReceiveProps(){    //     this.refs.modal.open()    // }    // componentWillMount() {    //     this.refs.modal.open()    // }    render() {        const navigator = this.props.navigation;        var ts=new Date().getTime();        return (            <View style={styles.container}>                <Modal                    // visible={this.state.bigPictureVisible}                    transparent={true}                    isOpen={true}                    ref={"modal"}                >                    <ImageViewer                        imageUrls={[{url:strings.head+this.state.bigPictureUrl+"?"+ts,props:{}}]}                        // onClick={()=>this.setState({bigPictureVisible:false})}                        onClick={()=>{this._onBackIconPress()}}                    />                </Modal>            </View>        );    }    _onVolumeIconPress =() =>{};    _onHelpIconPress =() =>{};    _onBackIconPress = () => {        this.props.navigation.pop()        this.refs.modal.close()    };};const styles = StyleSheet.create({    container: {        flex:1,        alignItems:'center',        justifyContent: 'center'    },    stateWrapper:{        // flex:1,        // alignItems:'center',        // justifyContent: 'center'        // borderWidth:1,        marginTop:SCREEN_HEIGHT*0.01,        width:SCREEN_WIDTH*0.9,        // paddingTop:20,        // alignSelf:"flex-start"    },    stateText:{        fontSize:16,        margin:2,        lineHeight:18,    }});const mapStateToProps = (state) => ({    auth: state.get('auth'),    unionId:state.get('auth').get('unionId'),    cartId:state.get('auth').get('cartId'),    username:state.get('auth').get('username'),    password:state.get('auth').get('password'),    root: state.get('root'),    union: state.get('union'),});export default connect(mapStateToProps)(BigPicture)