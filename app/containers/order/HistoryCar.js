/** * HistoryCar.js */import React, {Component} from "react";import {Image, StatusBar, StyleSheet, Text, View,FlatList,TouchableOpacity,ScrollView} from "react-native";import {connect} from "react-redux";import {TopToolBar,ACTION_HELP} from '../../components/TopToolBar';import {BottomToolBar, ACTION_BACK,ACTION_DISCOUNT,ACTION_LOGOUT} from '../../components/BottomToolBar';import Icon from 'react-native-vector-icons/FontAwesome';import * as authActions from "../../actions/auth-actions";import * as shoppingActions from '../../actions/shopping-actions';import * as unionActions from "../../actions/union-actions";import strings from "../../resources/strings"import constants from '../../resources/constants';import Button from "../../components/Button";import DeviceInfo from 'react-native-device-info';import { getUniqueId, getManufacturer ,getDeviceId} from 'react-native-device-info';import Accordion from 'react-native-collapsible/Accordion';import {SCREEN_HEIGHT, SCREEN_WIDTH,getTabBarHeight,getHeaderHeight} from "../../utils/tools";import colors from "../../resources/colors";import * as orderActions from "../../actions/order-actions";let deviceId = DeviceInfo.getUniqueId();export class HistoryCar extends Component {    constructor(props) {        super(props);        this.state={            activeSections: [],        };    }    componentWillMount() {        // this.props.dispatch(orderActions.getHistoryCarList());    }    render() {        console.log(this.props.carList)        const navigator = this.props.navigation;        return (            <View style={styles.container}>                <TopToolBar title = {this.props.union.get("union").unionName} navigation = {this.props.navigation}                            _onLeftIconPress={this._onVolumeIconPress}                            _onRightIconPress={this._onHelpIconPress}/>                <View style={{flex:1,marginBottom:getTabBarHeight()}}>                    {this._renderContent()}                </View>                <BottomToolBar navigation={this.props.navigation}                               leftAction={ACTION_BACK}                               _onLeftIconPress={this._onBackIconPress}                />            </View>        );    }    _renderClassItem(rowData,index){        return(            <TouchableOpacity                onPress={()=>this.changeCar(rowData.unionId,rowData.cartId)}            >                <View style={{width:SCREEN_WIDTH,alignItems:'center'}}>                    <View style={styles.minClass}>                        <View>                            <Text style={{fontSize:16}}>{rowData.unionName}</Text>                        </View>                        <View>                            <Text style={{fontSize:16}}>{rowData.amount} productos en </Text>                        </View>                    </View>                </View>            </TouchableOpacity>        );    }    _renderContent(){        const data=this.props.carList        return (            <FlatList                data={data}                renderItem={({item,index})=>this._renderClassItem(item,index)}            />        );    };    _updateSections = activeSections => {        console.log(activeSections)        this.setState({ activeSections });    };    changeCar(unionId,cartId){        this.props.dispatch(authActions.setUnion(unionId,cartId));        this.props.dispatch(unionActions.getSupnuevoUnionCustomerShoppingCar(unionId));        // this.props.dispatch(unionActions.getUnionPriceList(unionId, 0, 10,cartId));        // this.props.dispatch(shoppingActions.getCartInfo(cartId,unionId));        this.props.navigation.push("ShoppingList")    }    _onVolumeIconPress =() =>{};    _onHelpIconPress =() =>{};    _onBackIconPress = () => {        this.props.navigation.pop()    };};const styles = StyleSheet.create({    container: {        flex:1,        alignItems:'center',        justifyContent: 'center'    },    stateWrapper:{        // flex:1,        // alignItems:'center',        // justifyContent: 'center'        // borderWidth:1,        marginTop:SCREEN_HEIGHT*0.01,        width:SCREEN_WIDTH*0.9,        // paddingTop:20,        // alignSelf:"flex-start"    },    stateText:{        fontSize:16,        margin:2,        lineHeight:18,    },    header:{        width:SCREEN_WIDTH,        padding:10,        height:'auto',        flexDirection:'row',        borderTopWidth:1,        borderColor:colors.primaryGray,        alignItems:'center'    },    headerText:{        fontSize:20,        fontWeight:'bold',        color:colors.baseBlack,        marginLeft:10    },    minClass:{        width:SCREEN_WIDTH*0.95,        padding:14,        height:'auto',        borderBottomWidth:0.5,        borderColor:'gray',        flexDirection:'row',        justifyContent:'space-between'    }});const mapStateToProps = (state) => ({    auth: state.get('auth'),    unionId:state.get('auth').get('unionId'),    cartId:state.get('auth').get('cartId'),    username:state.get('auth').get('username'),    password:state.get('auth').get('password'),    classList:state.get('shopping').get('classList'),    carList:state.get('order').get('carList'),    root: state.get('root'),    union: state.get('union'),});export default connect(mapStateToProps)(HistoryCar)